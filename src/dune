(library
 (name libelectrod)
 (public_name electrod.libelectrod)
 (libraries
  containers
  containers-data
  containers.unix
  fmt
  fmt.tty
  gen
  hashcons
  logs.fmt
  mtime.clock.os
  printbox
  printbox-text
  iter
  stdcompat
  stdlib-shims)
 (inline_tests)
 (preprocess
  (pps ppx_expect ppx_inline_test visitors.ppx)))

; Generate Scripts.ml file

(rule
 (targets Scripts.ml)
 (action
  (chdir
   %{workspace_root}
   (with-stdout-to
    %{targets}
    (progn
     (echo "let nuXmv_default_script = {|\n")
     (cat "res/nuxmv-default-script.scr")
     (echo "|}\n")
     (echo "let nuSMV_default_script = {|\n")
     (cat "res/nusmv-default-script.scr")
     (echo "|}\n")
     (echo "let nuXmv_default_bmc_script = {|\n")
     (cat "res/nuxmv-default-bmc-script.scr")
     (echo "|}\n")
     (echo "let nuSMV_default_bmc_script = {|\n")
     (cat "res/nusmv-default-bmc-script.scr")
     (echo "|}\n"))))))

(ocamllex Scanner Smv_trace_scanner)

;;; Electrod parser

(menhir
 (modules Parser))

;;; SMV trace parser

(menhir
 (flags (--only-tokens))
 (modules Smv_trace_tokens))

(menhir
 (merge_into Smv_trace_parser)
 (flags
  (--external-tokens Smv_trace_tokens))
 (modules Smv_trace_parser Smv_trace_tokens))
